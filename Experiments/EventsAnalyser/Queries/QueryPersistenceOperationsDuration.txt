from(bucket: "experiment_app")
  |> range(start: time(v: startTimeStamp), stop: time(v: endTimeStamp))
  |> filter(fn: (r) => r["_measurement"] == "spans")
  |> filter(fn: (r) => r["name"] == "AcquireExecutionLockAsync"
                    or r["name"] == "SucceededAsync"
                    or r["name"] == "IsSucceededAsync"
                    or r["name"] == "HeartbeatAsync"
                    or r["name"] == "ReleaseExecutionLockAsync"
                    or r["name"] == "GetCurrentWorkloadAsync"
                    or r["name"] == "UpdateWorkloadAsync"
                    or r["name"] == "UpdatePriorityAsync"
                    or r["name"] == "UpdateNodePriorityAsync")
  |> filter(fn: (r) => r["_field"] == "duration_nano")
  |> keep(columns: ["_field", "_value", "name", "span_id", "trace_id"])
  |> pivot(rowKey: ["span_id"], columnKey: ["_field"], valueColumn: "_value")

